name: Deploy to Ec2

on:
  push:
    branches:
      - develop
    type:
      - closed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Repo checkout
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          submodules: true

      # JDK 환경
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle Permission
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle build
      - name: Build with Gradle
        run: ./gradlew clean build -x test --stacktrace

      # Docker build & Push
      - name: Build and Push docker image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          REPOSITORY: givemeticon-api-server
          REGISTRY: ${{ secrets.DOCKER_REPO }}
          IMAGE_TAG: latest
        run: |
          docker login -u $DOCKER_USERNAME -p --password-stdin < $DOCKER_PASSWORD
          docker build -t $DOCKER_USERNAME/$REPOSITORY:$IMAGE_TAG .
          docker push $DOCKER_USERNAME/$REPOSITORY:$IMAGE_TAG

      # 서버에서 Docker 이미지 실행
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          # 도커 작업
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p --password-stdin < $DOCKER_PASSWORD
            ids=$(sudo docker ps -a -q --filter "name=$DOCKER_USERNAME/$REPOSITORY")
            for id in $ids
            do
              sudo docker stop $id && docker rm $id
            done
            docker image prune -a -f
            docker pull $DOCKER_USERNAME/$REPOSITORY:$IMAGE_TAG
            docker run -p 8080:8080 --name $DOCKER_USERNAME/$REPOSITORY -d $DOCKER_USERNAME/$REPOSITORY:$IMAGE_TAG
